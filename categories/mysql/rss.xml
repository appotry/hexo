<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>夜法之书 • Posts by &#34;mysql&#34; category</title>
        <link>https://blog.17lai.site</link>
        <description>~软件驱动世界~个人独立技术博客，关于Linux,开源，Nas，Docker，嵌入式，理财，健身等主题！</description>
        <language>zh-CN</language>
        <pubDate>Wed, 08 Sep 2021 09:25:00 +0800</pubDate>
        <lastBuildDate>Wed, 08 Sep 2021 09:25:00 +0800</lastBuildDate>
        <category>github</category>
        <category>jekyll</category>
        <category>blog</category>
        <category>embeded</category>
        <category>hisilicon</category>
        <category>linux</category>
        <category>driver</category>
        <category>3798m</category>
        <category>mpp</category>
        <category>unf</category>
        <category>kernel</category>
        <category>gitlab</category>
        <category>git</category>
        <category>crack</category>
        <category>hardlink</category>
        <category>bt</category>
        <category>pt</category>
        <category>qnap</category>
        <category>硬盘</category>
        <category>nas</category>
        <category>3G</category>
        <category>4G</category>
        <category>3531a</category>
        <category>移植</category>
        <category>嵌入式</category>
        <category>宝塔</category>
        <category>vps</category>
        <category>建站</category>
        <category>nginx</category>
        <category>apache</category>
        <category>mysql</category>
        <category>markdown</category>
        <category>picgo</category>
        <category>wiz</category>
        <category>joplin</category>
        <category>typora</category>
        <category>docker</category>
        <category>lamp</category>
        <category>php</category>
        <category>tomcat</category>
        <category>registry</category>
        <category>教程</category>
        <category>email</category>
        <category>https</category>
        <category>ssl</category>
        <category>debian</category>
        <category>laptop</category>
        <category>ed2k</category>
        <category>ati</category>
        <category>qbittorrent</category>
        <category>ssd</category>
        <category>hdd</category>
        <category>transmission</category>
        <category>pdca</category>
        <category>5w2h</category>
        <category>smart</category>
        <category>swot</category>
        <category>grow</category>
        <category>okr</category>
        <category>wbs</category>
        <category>启动</category>
        <category>emby</category>
        <category>sonarr</category>
        <category>jeckett</category>
        <category>portainer</category>
        <category>tls</category>
        <category>隐私</category>
        <category>安全</category>
        <category>优化</category>
        <category>gitbook</category>
        <category>mariadb</category>
        <category>note</category>
        <category>mermaid</category>
        <category>webdav</category>
        <category>hexo</category>
        <category>matery</category>
        <category>npm</category>
        <category>web</category>
        <category>http</category>
        <category>css</category>
        <category>js</category>
        <category>ai</category>
        <category>face</category>
        <category>3a</category>
        <category>ae</category>
        <category>image</category>
        <category>ccs</category>
        <category>vim</category>
        <category>ide</category>
        <category>music</category>
        <category>韩红</category>
        <category>thinkpad</category>
        <category>sound</category>
        <category>speaker</category>
        <category>刮削</category>
        <category>musicbrainz</category>
        <category>mp3tag</category>
        <category>tmm</category>
        <category>字幕</category>
        <category>plex</category>
        <category>cmake</category>
        <category>develop</category>
        <category>ipv6</category>
        <category>traefik</category>
        <category>proxy</category>
        <category>swarm</category>
        <category>ubuntu</category>
        <category>vscode</category>
        <category>插件</category>
        <category>编码</category>
        <category>plantuml</category>
        <category>mathjax</category>
        <category>ci/cd</category>
        <category>earthly</category>
        <category>mstream</category>
        <category>selfhost</category>
        <category>中岛美嘉</category>
        <category>node</category>
        <category>jenkins</category>
        <category>shell</category>
        <category>tools</category>
        <category>winrar</category>
        <category>emoji</category>
        <category>isp</category>
        <category>awb</category>
        <category>mywork</category>
        <category>cdn</category>
        <category>seo</category>
        <category>fitness</category>
        <category>健身</category>
        <category>运动</category>
        <category>devops</category>
        <category>k8s</category>
        <category>harbor</category>
        <category>drowio</category>
        <category>pmbok</category>
        <category>管理</category>
        <category>ipd</category>
        <category>绩效</category>
        <category>man</category>
        <category>框架</category>
        <category>图解</category>
        <category>doxygen</category>
        <category>bash</category>
        <category>中医</category>
        <category>西医</category>
        <category>社会观察</category>
        <category>竞品分析</category>
        <category>rss</category>
        <category>rsshub</category>
        <category>知识</category>
        <category>智慧</category>
        <category>os</category>
        <category>自制</category>
        <category>编译器</category>
        <category>C</category>
        <category>compiler</category>
        <category>驱动</category>
        <category>sensor</category>
        <category>故事</category>
        <category>nodeppt</category>
        <category>echarts</category>
        <category>写作</category>
        <category>vercel</category>
        <category>potplayer</category>
        <category>action</category>
        <category>workflow</category>
        <category>概率</category>
        <category>普朗克</category>
        <category>投资</category>
        <category>理财</category>
        <category>金融</category>
        <category>yandex</category>
        <category>source</category>
        <category>hack</category>
        <category>download</category>
        <category>chatgpt</category>
        <category>openai</category>
        <category>calibre</category>
        <category>douban</category>
        <category>book</category>
        <category>不可能三角</category>
        <category>waline</category>
        <category>IPD</category>
        <category>MM方法论</category>
        <category>端到端</category>
        <category>信用卡</category>
        <category>定制服务器</category>
        <category>search</category>
        <category>开源</category>
        <category>高考</category>
        <category>专业</category>
        <category>读书评鉴</category>
        <category>穿越必备</category>
        <category>易学</category>
        <category>google</category>
        <category>人性</category>
        <category>人格分析</category>
        <category>profile</category>
        <category>tampermonkey</category>
        <category>zhihu</category>
        <category>csdn</category>
        <category>juejin</category>
        <category>密码</category>
        <category>bitwarden</category>
        <category>office</category>
        <category>kms</category>
        <category>破解</category>
        <category>webhook</category>
        <category>健康</category>
        <category>恢复</category>
        <category>养生</category>
        <category>刀郎</category>
        <category>study</category>
        <category>english</category>
        <category>雅思</category>
        <category>umami</category>
        <category>windows</category>
        <category>垃圾清理</category>
        <category>速度优化</category>
        <item>
            <guid isPermalink="true">https://blog.17lai.site/posts/f0b0af52/</guid>
            <title>Mariadb/Mysql命令行常用命令</title>
            <link>https://blog.17lai.site/posts/f0b0af52/</link>
            <category>linux</category>
            <category>mysql</category>
            <category>docker</category>
            <category>mariadb</category>
            <pubDate>Wed, 08 Sep 2021 09:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;一、初始化等&#34;&gt;一、初始化等&lt;/h2&gt;
&lt;h3 id=&#34;1、登陆数据库方法&#34;&gt;&lt;strong&gt;1、登陆数据库方法&lt;/strong&gt;&lt;/h3&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;mysql -u用户名 -p用户密码&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2、修改root及用户密码&#34;&gt;2、修改root及用户密码&lt;/h3&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;use mysql;
update user set password=password(&#39;11111111&#39;) where user=&#39;root&#39; and host=&#39;localhost&#39;;
flush privileges;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;MariaDB [mysql]&amp;gt; update user set password=password(&#39;11111111&#39;) where user=&#39;root&#39; and host=&#39;localhost&#39;;
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0
 
MariaDB [mysql]&amp;gt; flush privileges;
Query OK, 0 rows affected (0.01 sec)
 
MariaDB [mysql]&amp;gt; exit&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3、创建用户&#34;&gt;&lt;strong&gt;3、创建用户&lt;/strong&gt;&lt;/h3&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;insert into mysql.user(host,user,password)values(&#34;localhost&#34;,&#34;test&#34;,password(&#34;password&#34;));
flush privileges;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h3 id=&#34;4、删除用户&#34;&gt;4、删除用户&lt;/h3&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;DELETE FROM user WHERE User=&#34;test&#34; and Host=&#34;localhost&#34;;
flush privileges;　　&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h3 id=&#34;5、删除用户的数据库&#34;&gt;5、删除用户的数据库&lt;/h3&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;drop database test1;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h3 id=&#34;6、交互模式初始化&#34;&gt;6、交互模式初始化&lt;/h3&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;mysql_secure_installation&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h2 id=&#34;二、-常用操作&#34;&gt;二、 常用操作&lt;/h2&gt;
&lt;h3 id=&#34;1、显示数据库列表&#34;&gt;&lt;strong&gt;1、显示数据库列表&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;show databases;&lt;/code&gt;:查看所有的数据库&lt;/p&gt;
&lt;h3 id=&#34;2、创建数据库&#34;&gt;2、创建数据库&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;create database zxg;&lt;/code&gt;：创建名尾zxg的数据库&lt;/p&gt;
&lt;h3 id=&#34;3、进入数据库&#34;&gt;3、进入数据库&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;use zxg;&lt;/code&gt;:进入zxg的数据库&lt;/p&gt;
&lt;h3 id=&#34;4、显示库中的数据表&#34;&gt;4、显示库中的数据表&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;show tables;&lt;/code&gt;：查看数据库里有多少张表&lt;/p&gt;
&lt;h3 id=&#34;5、创建数据表&#34;&gt;5、创建数据表&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;create table t1 (id varchar(20),name varchar(20));&lt;/code&gt;:创建名为t1表，并创建两两个字段，id、name，varchar表示设置数据长度，用字符来定义长度单位，其&lt;/p&gt;
&lt;h3 id=&#34;6、插入数据&#34;&gt;6、插入数据&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;insert into t1 values（&#34;1&#34;，&#34;zxg&#34;）;&lt;/code&gt;:向表中插入数据&lt;/p&gt;
&lt;h3 id=&#34;7、查看数据表&#34;&gt;7、查看数据表&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;select * from t1;&lt;/code&gt; ：查看t1表数据内容&lt;/p&gt;
&lt;h3 id=&#34;8、多条件查询&#34;&gt;8、多条件查询&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;select * from t1 where id=1 and age = &#39;zxg &#39; ;&lt;/code&gt;: id、age 多个条件查询&lt;/p&gt;
&lt;h3 id=&#34;9、查看字段内容&#34;&gt;9、查看字段内容&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;desc t1;&lt;/code&gt;:查看t1 表字段内容&lt;/p&gt;
&lt;h3 id=&#34;10、修改字段长度&#34;&gt;10、修改字段长度&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;alter table t1 modify column name varchar(20);&lt;/code&gt;:修改name字段的长度&lt;/p&gt;
&lt;h3 id=&#34;11、修改该字段内容&#34;&gt;11、修改该字段内容&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;update t1 set name=&#39;zxg.net&#39; where id=1;&lt;/code&gt;：修改name字段的内容&lt;/p&gt;
&lt;h3 id=&#34;12、权限刷新&#34;&gt;&lt;strong&gt;12、权限刷新&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;flush privileges;&lt;/code&gt; :刷新权限&lt;/p&gt;
&lt;h3 id=&#34;13、清空表单&#34;&gt;13、清空表单&lt;/h3&gt;
&lt;p&gt;delete from t1;` :清空表内容&lt;/p&gt;
&lt;h3 id=&#34;14、删除数据表&#34;&gt;14、删除数据表&lt;/h3&gt;
&lt;p&gt;`drop table t1:删除表&lt;/p&gt;
&lt;h3 id=&#34;15、删除数据库&#34;&gt;15、删除数据库&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;drop database zxg;&lt;/code&gt;：删除zxg数据库&lt;/p&gt;
&lt;h3 id=&#34;16、查看数据库字符集&#34;&gt;16、查看数据库字符集&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;show variables like &#39;%char%&#39;;&lt;/code&gt;:查看数据库字符集&lt;/p&gt;
&lt;h3 id=&#34;17、查看存储引擎&#34;&gt;17、查看存储引擎&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;show engines;&lt;/code&gt;:查看MySQL存储引擎。&lt;/p&gt;
&lt;h3 id=&#34;18、查看默认存储引擎&#34;&gt;18、查看默认存储引擎&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;show variables like &#39;%storage_engine%&#39;;&lt;/code&gt;:查看MySQL默认的存储引擎&lt;/p&gt;
&lt;h3 id=&#34;19、修改存储引擎&#34;&gt;19、修改存储引擎&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;alter table t1 engine=innodb;&lt;/code&gt;:修改MySQL t1表存储引擎&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;[root@web2 ~]# mysql
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 2
Server version: 5.5.60-MariaDB MariaDB Server
 
Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.
 
Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.
 
MariaDB [(none)]&amp;gt; show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| test               |
+--------------------+
4 rows in set (0.00 sec)
 
MariaDB [(none)]&amp;gt;  create database zxg;                 
Query OK, 1 row affected (0.00 sec)
 
MariaDB [(none)]&amp;gt; use zxg;
Database changed
MariaDB [zxg]&amp;gt; show tables;
Empty set (0.00 sec)
 
MariaDB [zxg]&amp;gt; create table t1(id varchar(20),name varchar(20));
Query OK, 0 rows affected (0.00 sec)
 
MariaDB [zxg]&amp;gt; show tables;
+---------------+
| Tables_in_zxg |
+---------------+
| t1            |
+---------------+
1 row in set (0.00 sec)
 
MariaDB [zxg]&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;MariaDB [zxg]&amp;gt; insert into t1 values (&#34;1&#34;,&#34;zxg&#34;);
Query OK, 1 row affected (0.01 sec)
 
MariaDB [zxg]&amp;gt; select *from t1;
+------+------+
| id | name |
+------+------+
| 1 | zxg |
+------+------+
1 row in set (0.00 sec)
 
MariaDB [zxg]&amp;gt; select *from t1 where id=1;
+------+------+
| id | name |
+------+------+
| 1 | zxg |
+------+------+
1 row in set (0.00 sec)
 
MariaDB [zxg]&amp;gt; select *from t1 where id=1 and name=&#39;zxg&#39;;
+------+------+
| id | name |
+------+------+
| 1 | zxg |
+------+------+
1 row in set (0.01 sec)
 
MariaDB [zxg]&amp;gt; desc t1;
+-------+-------------+------+-----+---------+-------+
| Field | Type | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| id | varchar(20) | YES | | NULL | |
| name | varchar(20) | YES | | NULL | |
+-------+-------------+------+-----+---------+-------+
2 rows in set (0.00 sec)
 
MariaDB [zxg]&amp;gt; alter table t1 modify column name varchar(20);
Query OK, 0 rows affected (0.00 sec)
Records: 0 Duplicates: 0 Warnings: 0
 
MariaDB [zxg]&amp;gt; update t1 set name=&#39;zxg.net&#39; where id=1;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1 Changed: 1 Warnings: 0
MariaDB [zxg]&amp;gt;
 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h2 id=&#34;三、mysql-数据库字符集设置&#34;&gt;三、mysql 数据库字符集设置&lt;/h2&gt;
&lt;p&gt;mysql数据库存储数据时，默认编码为latinl，存储中文字符时，在调用时会显示为乱码，为了解决该乱码问题，需修改该mysql默认字符集为UTE-8&lt;/p&gt;
&lt;p&gt;装mariadb的是时候看已经默认为ute-8&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;MariaDB [(none)]&amp;gt; show variables like &#39;%char%&#39;;
+--------------------------+----------------------------+
| Variable_name            | Value                      |
+--------------------------+----------------------------+
| character_set_client     | utf8                       |
| character_set_connection | utf8                       |
| character_set_database   | latin1                     |
| character_set_filesystem | binary                     |
| character_set_results    | utf8                       |
| character_set_server     | latin1                     |
| character_set_system     | utf8                       |
| character_sets_dir       | /usr/share/mysql/charsets/ |
+--------------------------+----------------------------+
8 rows in set (0.00 sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;如不是，可以设置&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;SET character_set_client = utf8;
SET character_set_results = utf8;
SET character_set_connection = utf8;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h2 id=&#34;四、mysql-数据库密码管理&#34;&gt;四、mysql 数据库密码管理&lt;/h2&gt;
&lt;p&gt;设置密码访问，密码破解、密码权限、修改密码；&lt;/p&gt;
&lt;h3 id=&#34;1、创建用户及授权&#34;&gt;1、创建用户及授权&lt;/h3&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;grant all on zxg.* to test@localhost identified by &#39;pas&#39;;
grant select,insert,update,delete on *.*to test@&#34;%&#34; identified by &#39;pas&#39;;
grant all on zxg.* to test@`192.168.216.53` identified by &#39;pas&#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2、破解密码方法&#34;&gt;2、破解密码方法&lt;/h3&gt;
&lt;p&gt;停止服务—》跳过权限方式启动—》单开一个窗口登陆—》登陆修改密码即可&lt;/p&gt;
&lt;p&gt;1）systemctl stop mariadb&lt;/p&gt;
&lt;p&gt;2）mysqld_safe --skip-grant-tables &amp;amp;&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;[root@web2 ~]# mysqld_safe --skip-grant-tables &amp;amp;
[1] 47542
[root@web2 ~]# 190520 15:45:22 mysqld_safe Logging to &#39;/var/log/mariadb/mariadb.log&#39;.
190520 15:45:22 mysqld_safe Starting mysqld daemon with databases from /var/lib/mysql&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;[root@web2 ~]# mysql
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 1
Server version: 5.5.60-MariaDB MariaDB Server
 
Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.
 
Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.
 
MariaDB [(none)]&amp;gt; use mysql;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A
 
Database changed
MariaDB [mysql]&amp;gt; update user set password=password(&#39;11111111&#39;) where user=&#39;root&#39; ;
Query OK, 3 rows affected (0.01 sec)
Rows matched: 4  Changed: 3  Warnings: 0
 
MariaDB [mysql]&amp;gt; flush privileges;
Query OK, 0 rows affected (0.00 sec)
 
MariaDB [mysql]&amp;gt; exit
Bye
[root@web2 ~]#&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;然后退出”跳过权限方式“ ctrl+c ，正常启动mysql就可以了&lt;/p&gt;
&lt;h2 id=&#34;五、mysql-配置文件详解&#34;&gt;五、mysql 配置文件详解&lt;/h2&gt;
&lt;h3 id=&#34;1、参数说明&#34;&gt;1、参数说明&lt;/h3&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-ini&#34; data-language=&#34;ini&#34;&gt;&lt;code class=&#34;language-ini&#34;&gt;[mysqld]                                                              #服务端配置
port        = 3306                                                    #监听端口
socket      = /tmp/mysql.sock                                         #通信设置
user    = mariadb                                                     #使用mariadb用户启动
basedir = /usr/local/mariadb                                          #安装路径
datadir = /data/mysql                                                 #数据目录
log_error = /data/mysql/mariadb.err                             　　　 #错误日志
pid-file = /data/mysql/mariadb.pid                             　　　　#pid进程文件
skip-external-locking                                                 #避免mysql的外部锁定，减少出错几率提高稳定性
key_buffer_size = 64M                                                 #缓存存储引擎参数，这个参数可以设置为64M
max_allowed_packet = 1M                                               #允许最大接收数据包的大小，防止服务器发送过大的数据包，可以设置为16MB或者更大，但设置太大也可能有危险
table_open_cache = 256                                                #mysql每打开一个表，都会读入一些数据到table_open_cache缓存中，当MYSQL在这个缓存中找不到相应的信息时，才会去磁盘读取，默认值64，假设系统有200个并发连接，则需将此参数设置为200*N（N为每个连接所需的文件描述符数目）；当设置为很大时，如果系统处理不了那么多文件描述符，那么就会出现客户端失效，连接不上
sort_buffer_size = 1M                                                 #在表进行order by和group by 排序操作时，由于排序的字段没有索引，会出现Using filesort，为了提高性能，可用此参数增加每个线程分配的缓存区大小，默认时256k，这个参数不要设置过大，一般128~256k，另外一般出现using filesort的时候，要通过增加索引来解决
net_buffer_length = 8K                                                #包消息缓冲区初始化net_buffer_length字节，但需要时可以增长到max_allowed_packet字节
read_buffer_size = 1M                                                 #该参数用于表的顺序扫描，表示每个线程分配的缓冲区大小，比如在进行全表扫描时，mysql会按照数据的存储顺序一次读取数据块，每次读取的数据块首先会暂存在read_buffer_size中，当buffer空间被写满或者全部数据读取结束后，在将buffer中的数据返回给上层调用者，以提高效率默认128k，也不要设置过大
read_rnd_buffer_size = 512K                                           #该参数用于表的随机读取，表示每个线程分配的缓冲区大小，比如，按照一个非索引字段做order by排序操作时，就会利用这个缓冲区来暂存读取的数据，默认时256k，也不要设置过大
myisam_sort_buffer_size = 16M                                         #当myisam表执行repair table或创建索引时，用以缓冲排序索引，设置太小可能会遇到&#34;myisam_sort_buffer_size is to small&#34;
thread_cache_size = 32                                                #线程池，线程缓冲。用来缓冲空闲的线程，以至于不被销毁，如果线程缓冲在的空闲线程，需要重新建立新连接，则会优先调用线程池中的缓冲，很快就能相应连接请求，每建立一个连接，都需要一个线程与之匹配。
query_cache_size = 32M                                                #缓存select语句和结果集大小的参数。查询缓存会存储一个select查询的文本与被传送到客户端的相应结果。如果之后接收到一个相同的查询，服务器会从查询缓存中检索结果，而不是再次分析和执行这个同样的查询。如果你的环境中写操作很少，读操作频繁，那么打开query_cache_type=1，会对性能有明显提升。如果写操作频繁，则应该关闭它（query_cache_type=0）。
tmp_table_size = 64M                                                  #临时HEAP数据表的最大长度(默认设置是32M); 超过这个长度的临时数据表将被转换为MyISAM数据表并存入一个临时文件。
                                                                      #
explicit_defaults_for_timestamp = true                     　　　　　　 #是否显示默认时间戳
#skip-networking                                                      #
max_connections = 500                                                 #该参数用来设置最大连接数，告诉你当前你的服务器允许多少并发连接。默认为100，一般设置为512-1000即可。请记住，太多的连接会导致内存的使用量过高并且会锁住你的 MySQL 服务器。一般小网站需要 100-200 的连接数，而较大可能需要 500-800 甚至更多。这里的值很大程度上取决于你 MySQL/MariaDB 的使用情况。
max_connect_errors = 100                                              #如果有时网络抽风，或者应用配置错误，或者其他原因导致客户端短时间内不断的尝试连接，客户端可能会被列入黑名单，然后将无法连接，直到再次刷新主机缓存。这个选项默认值太小了，可以考虑设的足够大（如果你的服务器配置够强大的话）。
open_files_limit = 65535                                              #mysql打开最大文件数
                                                                      #
log-bin=mysql-bin                                                     #这些路径相对于datadir
binlog_format=mixed                                                   #日志格式
server-id   = 1                                                       #给服务器分配一个独一无二的ID编号; n的取值范围是1~2的32次方启用二进制日志功能。在复制数据同步的时候会用到，Helloweba后面会有文章介绍。
expire_logs_days = 10                                                 #启用二进制日志后，保留日志的天数。服务器会自动清理指定天数前的日志文件，如果不设置则会导致服务器空间耗尽。一般设置为7～14天。
                                                                       #
default_storage_engine = InnoDB                                     　#新数据表的默认存储引擎(默认设置是MyISAM)。这项设置还可以通过–default-table-type选项来设置。
innodb_file_per_table = 1                                             #提供了更灵活的方式，它把每个数据库的信息保存在一个 .ibd 数据文件中。每个 .idb 文件代表它自己的表空间。通过这样的方式可以更快地完成类似 “TRUNCATE” 的数据库操作，当删除或截断一个数据库表时，你也可以回收未使用的空间。这样配置的另一个好处是你可以将某些数据库表放在一个单独的存储设备。这可以大大提升你磁盘的 I/O 负载。
innodb_data_home_dir = /data/mysql                             　　　　#InnoDB主目录，所有与InnoDB数据表有关的目录或文件路径都相对于这个路径。在默认的情况下，这个主目录就是MySQL的数据目录。
innodb_data_file_path = ibdata1:10M:autoextend     　　　　　　　　　　　#用来容纳InnoDB为数据表的表空间: 可能涉及一个以上的文件; 每一个表空间文件的最大长度都必须以字节(B)、兆字节(MB)或千兆字节(GB)为单位给出; 表空间文件的名字必须以分号隔开; 最后一个表空间文件还可以带一个autoextend属性和一个最大长度(max:n)。
innodb_log_group_home_dir = /data/mysql                     　　　　　　#用来存放InnoDB日志文件的目录路径(如ib_logfile0、ib_logfile1等)。在默认的情况下，InnoDB驱动程序将使用 MySQL数据目录作为自己保存日志文件的位置。
innodb_buffer_pool_size = 256M                                     　　#这个参数是InnoDB存储引擎的核心参数，默认为128KB，这个参数要设置为物理内存的60%～70%。
innodb_log_file_size = 64M                                            #事务日志文件写操作缓存区的最大长度(默认设置是1MB)。
innodb_log_buffer_size = 8M                                           #事务日志所使用的缓存区。InnoDB在写事务日志的时候，为了提高性能，先将信息写入Innodb Log Buffer中，当满足innodb_flush_log_trx_commit参数所设置的相应条件（或者日志缓冲区写满）时，再将日志写到文件（或者同步到磁盘）中。可以通过innodb_log_buffer_size参数设置其可以使用的最大内存空间。默认是8MB，一般为16～64MB即可。
innodb_flush_log_at_trx_commit = 1                             　　　　#这个选项决定着什么时候把日志信息写入日志文件以及什么时候把这些文件物理地写(术语称为”同步”)到硬盘上。设置值0的意思是每隔一秒写一次日 志并进行 同步，这可以减少硬盘写操作次数，但可能造成数据丢失; 设置值1(设置设置)的意思是在每执行完一条COMMIT命令就写一次日志并进行同步，这可以防止数据丢失，但硬盘写操作可能会很频繁; 设置值2是一般折衷的办法，即每执行完一条COMMIT命令写一次日志，每隔一秒进行一次同步。
innodb_lock_wait_timeout = 50                                         #如果某个事务在等待n秒(s)后还没有获得所需要的资源，就使用ROLLBACK命令放弃这个事务。这项设置对于发现和处理未能被InnoDB数据表驱动 程序识别出来的死锁条件有着重要的意义。这个选项的默认设置是50s。
                                                                      #
[mysqldump]                                                           #
quick                                                                 #
max_allowed_packet = 16M                                              #          
                                                                      #
[mysql]                                                               #
no-auto-rehash                                                        #
                                                                      #
[myisamchk]                                                           #
key_buffer_size = 64M                                                 #  
sort_buffer_size = 1M                                                 #  
read_buffer = 2M                                                      #
write_buffer = 2M                                                     #
                                                                      #
[mysqlhotcopy]                                                        #
interactive-timeout                                                   #&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2、mysql数据库索引案例（百万量级）&#34;&gt;2、mysql数据库索引案例（百万量级）&lt;/h3&gt;
&lt;p&gt;[client]&lt;/p&gt;
&lt;figure&gt;&lt;div class=&#34;code-area&#34;&gt;&lt;pre class=&#34;line-numbers language-sql&#34; data-language=&#34;sql&#34;&gt;&lt;code class=&#34;language-sql&#34;&gt;port    =3306                                  
socket    =/tmp/mysql.sock                     
 
 
 
[mysqld]                                                                             
port        = 3306                                                         
socket      = /tmp/mysql.sock                                   
user    = mysql  
server_id　　= 10
datadir　　= /data/mysql/
old_passwords　　= 1
lower_case_table_names　　= 1
character-set-server　　= utf8
default-storage-engine　　= MYISAM
log-bin　　= bin.log
log-error　　= error.log
pid-file　　= mysql.pid
long_query_time　　= 2
slow_query_time　　= 2
slow_query_log　
slow_query_log_file　　= slow.log
binlog_cache_size　　= 4MB
binlog_format　　= mixed
max_binlog_cache_size　　= 16MB
max_binlog_size　　= 1GB
expire_logs_days　　= 30
ft_min_word_len　　= 4
back_log　　= 512
max_allowed_packet　　= 64MB
max_connections　　= 4096
max_connect_errors　　= 100
join_buffer_size　　= 2MB
read_buffer_size　　= 2MB
read_rnd_buffer_size　　= 2MB
sort_buffer_size　　　　= 2MB
query_cache_size　　= 2MB
table_open_cache　　= 10000
thread_cache_size　　= 256
max_heap_table_size　　= 64MB
tmp_table_size　　= 64MB
thread_stack　　= 192KB
thread_concurrency　　= 24
local-infile　　= 0
skip-show-database
skip-name-resolve
skip-external-locking
connect_timeout　　= 600
interactive_timeout　　= 600
wait_timeout　　= 600
#MyISAM
key_buffer_size　　= 512MB
bulk_insert_buffer_size　　= 64MB
mysiam_sort_buffer_size　　= 64MB
mysiam_max_sort_file_size　　= 1GB
mysiam_repair_threads　　= 1
concurrent_insert　　= 2
myisam_recover
#INNODB
innodb_buffer_pool_size　　= 64G
innodb_additional_mem_pool_size　　= 32MB
innodb_data_file_path　　=　ibdata1:1G;ibdata2:1G:autoextend
innodb_read_io_threads　　= 8
innodb_write_io_threads 　　= 8
innodb_file_per_table　　= 1
innodb_flush_log_at_thx_commit　　= 2
innodb_lock_wait_timeout　　= 120
innodb_log_buffer_size　　= 8MB
innodb_log_file_size　　= 256MB
innodb_log_files_in_group　　= 3
innodb_max_dirty_pages_pct　　= 90
innodb_thread_concurrency　　= 16
innodb_open_files　　= 10000
#innodb_force_recovery　　= 4
#replication slave
read-only
#skip-salve-start
relay-log　　= relay.log
log-slave-updates&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;本文参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.centos.bz/2018/02/mariadb-mysql%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6my-cnf%E8%A7%A3%E8%AF%BB/&#34;&gt;mariadb-mysql配置文件my-cnf解读&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://c.biancheng.net/mysql/&#34;&gt;MySQL教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;《曝光：Linux企业运维实战》&lt;/p&gt;
&lt;p&gt;夜法之书 整理编辑 &lt;strong&gt;From:&lt;/strong&gt; &lt;a href=&#34;https://www.cnblogs.com/zhangxingeng/p/10882845.html&#34;&gt;zhangxingeng&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://blog.17lai.site/posts/d5f56dd0/</guid>
            <title>通过宝塔面板实现MySQL性能简单调优</title>
            <link>https://blog.17lai.site/posts/d5f56dd0/</link>
            <category>linux</category>
            <category>mysql</category>
            <category>优化</category>
            <pubDate>Mon, 06 Sep 2021 16:25:00 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;在PHP+MYSQL架构网站运行过程中，往往会遇到各种性能问题影响，如MySQL、PHP、CPU、磁盘IO、缓存等，其中MySQL瓶颈就是最常见也最难解决的一种影响网站性能的因素；通常，我们会使用redis、memcached等缓存软件来缓存内容，这确实是最优的解决方案之一，但这需要网站程序的支持，然而多数常用网站程序并不支持或者不能完美支持这些缓存软件，今天我们就来谈谈如何通过MySQL自身的配置调整来优化MySQL性能，以缓解MySQL瓶颈问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;准备：&#34;&gt;&lt;strong&gt;准备：&lt;/strong&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;​    1、宝塔Linux面板 正式版 5.2.0+ (2017/09/20发布)  测试版5.2.4+&lt;/p&gt;
&lt;p&gt;​    2、MySQL 5.x&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;通常MySQL调优我们分以下几部分：&#34;&gt;&lt;strong&gt;通常MySQL调优我们分以下几部分：&lt;/strong&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;​    1、MySQL配置参数调优 (需要根据网站运行情况调整)&lt;/p&gt;
&lt;p&gt;​    2、数据表索引调优 (效果明显，但通常优秀的开源程序都不需要调整)&lt;/p&gt;
&lt;p&gt;​    3、SQL语句调优 (这是程序员或DBA干的事)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;今天我们主要谈谈如果配合宝塔面板的新功能来进行MySQL配置参数调优，我们先来看两张图片：&lt;/p&gt;
&lt;p&gt;(图1)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/08/2720210827205902.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;(图2)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cimg1.17lai.site/data/2021/08/2720210827205906.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;很明显，(图1)显示的是MySQL当前的运行状态，(图2)显示的是MySQL主要配置参数&lt;/p&gt;
&lt;p&gt;下面我们就来解读一下这两张图：&lt;/p&gt;
&lt;h3 id=&#34;1、活动-峰值连接数&#34;&gt;&lt;strong&gt;1、活动/峰值连接数&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;​      (图1)中当前活动的连接为1个，自MySQL服务启动以来，最高连接数为54；当最高连接数接近或等于(图2)中的max_connections时，应适当增加max_connections，需要注意的是，不要一下子增加过多，建议每次增加50，观察一段时间，不够再继续增加。&lt;/p&gt;
&lt;h3 id=&#34;2、线程缓存命中率&#34;&gt;&lt;strong&gt;2、线程缓存命中率&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;​      (图1)中线程缓存命中率为99.78%，若这个值小于90%，建议适当增加(图2)中的thread_cache_size，建议每次增加8。&lt;/p&gt;
&lt;h3 id=&#34;3、索引命中率&#34;&gt;&lt;strong&gt;3、索引命中率&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;​      (图1)中索引命中率为99.50%，若这个值小于95%，建议适当增加(图2)中的key_buffer_size，建议每次增加64，需要说明的是，若您的数据库使用的是Innodb引擎，可忽略这个选项&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、Innodb索引命中率&lt;/strong&gt;&lt;br&gt;
(图1)中Innodb索引命中率为100%，若这个值小于95%，建议适当增加(图2)中的innodb_buffer_pool_size，建议每次增加64，需要说明的是，若您的数据库没有使用Innodb引擎，可忽略这个选项&lt;/p&gt;
&lt;h3 id=&#34;5、查询缓存命中率&#34;&gt;&lt;strong&gt;5、查询缓存命中率&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;​      MySQL查询缓存是个比较受争议的功能，个人建议当你有在使用redis、memcached等缓存软件时，在(图2)中将query_cache_size设为0可以将其关闭，当你没有使用缓存软件，有多余的内存使用，且数据库瓶颈明显存在时，可以尝试开启查询缓存，这是个非常依赖数据表结构及SQL语句优化的功能，若数据表结构和SQL语句都针对查询缓存进行过优化，它的效果还是很不错的。&lt;/p&gt;
&lt;h3 id=&#34;6、创建临时表到磁盘&#34;&gt;&lt;strong&gt;6、创建临时表到磁盘&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;​      (图1)中创建临时表到磁盘的比例是0.42%，这说明大部分临时表创建到内存了，不会过多增加磁盘IO的开销，建议，当比例大于2%时适当增加(图1)中的tmp_cache_size，建议每次增加32，当比例大于60%时，放弃吧，有些开源程序并没有专门优化过SQL语句，所以在运行过程中会开启大量临时表，加多少缓存都是不够用的。&lt;/p&gt;
&lt;h3 id=&#34;7、已打开的表&#34;&gt;&lt;strong&gt;7、已打开的表&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;​      当(图1)中的已打开的表接近或等于(图2)中的table_open_cache时，可以适当增加table_open_cache，但若设置过大可能导致您的程序频繁中断MySQL连接，建议在1024以内，最大不要超过2048。&lt;/p&gt;
&lt;h3 id=&#34;8、没有使用索引的量、没有使用索引的JOIN量&#34;&gt;&lt;strong&gt;8、没有使用索引的量、没有使用索引的JOIN量&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;​      若不为0，就检查下数据表索引吧，其实只要没有疯涨，比如一天增涨几千，一般可以忽略，必竟优化索引还是程序员或DBA去干比较合适。&lt;/p&gt;
&lt;h3 id=&#34;9、排序后的合并次数&#34;&gt;&lt;strong&gt;9、排序后的合并次数&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;​      如果这个值在缓慢增张，建议适当增加(图2)中的sort_buffer_size，建议每次增加512，但最大不要超过8192，如果这个值一直在疯涨，增加sort_buffer_size也没用，就放弃这个选项吧，这个锅还是给程序开发者背。&lt;/p&gt;
&lt;h3 id=&#34;10、锁表次数&#34;&gt;&lt;strong&gt;10、锁表次数&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;​      如果服务器CPU开销不大的情况下，疯狂锁表，建议你将所有数据表转换成innodb，记得转换前备份哦。&lt;/p&gt;
&lt;h3 id=&#34;11、优化方案&#34;&gt;&lt;strong&gt;11、优化方案&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;​      这个是我们根据内存大小给的一个推荐优化方案，仅是建议仅用于基础参考值，还是要根据实据情况来调整每一个配置项。&lt;/p&gt;
&lt;p&gt;注意：保存参数配置后不会立即生效，记得要重启MySQL服务。&lt;/p&gt;
&lt;p&gt;写在最后：&lt;br&gt;
因我本人并不是专业DBA，难免有错误或遗漏的地方，还请大家给予指正，另外，可能面板提供的参考数据及调整选项还不够丰富，我们在往后的更新中会根据需要考虑继续增加更多的调整选项，谢谢大家的支持。&lt;/p&gt;
&lt;p&gt;来自网络整理。&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
